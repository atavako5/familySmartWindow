{"version":3,"sources":["HelperFunctions/CoordinateFinder.js","HelperFunctions/PrayerTimeFinderShia.js","components/PrayerTime.js","components/WeatherRefresher.js","components/Main.js","index.js"],"names":["CoordianteFinder","getCoordinates","callback","window","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","err","console","log","PrayerTimeFinderShia","findPrayerTime","month","year","Axios","get","params","method","then","response","data","PrayerTime","state","MonthsPrayerTimes","nextMonthsPrayerTime","date","Date","tehranTime","getMonthPrayingTime","_this","props","prayerTimes","getMonth","setState","this","myDate","getFullYear","_this2","getTwoMonthPrayerTime","setInterval","currSumTime","parseInt","getHours","getMinutes","nextPrayerTime","myNextPrayerTime","getDate","playAzan","calcTime","offset","d","utc","getTime","getTimezoneOffset","dayPrayerTime","gregorian","day","myListOfTimes","push","timings","Dhuhr","Maghrib","minTime","i","length","sumTime","split","Math","abs","prayerTimeStyler","concat","map","todayStyler","timeStyler","Imsak","Fajr","Sunrise","Sunset","minIndex","react_default","a","createElement","key","readable","className","weekday","en","data-label","todaysDate","slice","entry_default","value","React","Component","WeatherRefresher","refreshFlag","ReactWeather_default","forecast","apikey","type","lat","lon","tick","Main","playerURL","setCoordinates","CoordinateFinder","coordinates","ref","player","refPlayerText","playerText","components_PrayerTime","shouldPlay","components_WeatherRefresher","toString","ReactPlayer_default","controls","width","height","url","playing","onEnded","seekTo","placeholder","onClick","App","components_Main","renderContent","ReactDOM","render","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.081d5b1e.chunk.js","sourcesContent":["class CoordianteFinder {\r\n  getCoordinates = callback => {\r\n    window.navigator.geolocation.getCurrentPosition(\r\n      position => {\r\n        callback({\r\n          latitude: position.coords.latitude,\r\n          longitude: position.coords.longitude\r\n        });\r\n      },\r\n      err => console.log(err)\r\n    );\r\n  };\r\n}\r\n\r\nexport default CoordianteFinder;\r\n","import Axios from \"axios\";\r\nclass PrayerTimeFinderShia {\r\n  findPrayerTime = (latitude, longitude, month, year, callback) => {\r\n    Axios.get(\"http://api.aladhan.com/v1/calendar\", {\r\n      params: {\r\n        latitude: latitude,\r\n        longitude: longitude,\r\n        method: 0,\r\n        month: month + 1,\r\n        year: year\r\n      }\r\n    }).then(response => {\r\n      callback(response.data.data);\r\n    });\r\n  };\r\n}\r\nexport default PrayerTimeFinderShia;\r\n","import React from \"react\";\r\nimport PrayerTimeFinderShia from \"../HelperFunctions/PrayerTimeFinderShia\";\r\nimport Clock from \"react-clock\";\r\n\r\nclass PrayerTime extends React.Component {\r\n  state = {\r\n    MonthsPrayerTimes: [],\r\n    nextMonthsPrayerTime: [],\r\n    date: new Date(),\r\n    tehranTime: new Date()\r\n  };\r\n\r\n  getMonthPrayingTime = (month, year) => {\r\n    let myPrayerTimes = new PrayerTimeFinderShia();\r\n    myPrayerTimes.findPrayerTime(\r\n      this.props.latitude,\r\n      this.props.longitude,\r\n      month,\r\n      year,\r\n      prayerTimes => {\r\n        if (month !== new Date().getMonth()) {\r\n          this.setState({\r\n            nextMonthsPrayerTime: prayerTimes\r\n          });\r\n        } else {\r\n          this.setState({\r\n            MonthsPrayerTimes: prayerTimes\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  getTwoMonthPrayerTime() {\r\n    if (this.state.MonthsPrayerTimes && 1) {\r\n      let myDate = new Date();\r\n      this.getMonthPrayingTime(myDate.getMonth(), myDate.getFullYear());\r\n\r\n      if (myDate.getMonth() < 11) {\r\n        this.getMonthPrayingTime(myDate.getMonth() + 1, myDate.getFullYear());\r\n      } else {\r\n        this.getMonthPrayingTime(0, myDate.getFullYear() + 1);\r\n      }\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTwoMonthPrayerTime();\r\n    setInterval(() => {\r\n      this.setState({ date: new Date() });\r\n\r\n      let currSumTime =\r\n        60 * parseInt(new Date().getHours()) +\r\n        parseInt(new Date().getMinutes());\r\n\r\n      let nextPrayerTime = this.myNextPrayerTime(\r\n        this.state.MonthsPrayerTimes[new Date().getDate() - 1]\r\n      );\r\n\r\n      if (\r\n        nextPrayerTime - currSumTime >= 0 &&\r\n        nextPrayerTime - currSumTime < 2\r\n      ) {\r\n        this.props.playAzan(true);\r\n      }\r\n    }, 1000);\r\n    setInterval(() => this.setState({ tehranTime: this.calcTime(4.5) }), 1000);\r\n\r\n    setInterval(() => this.getTwoMonthPrayerTime(), 36000000);\r\n  }\r\n\r\n  calcTime(offset) {\r\n    var d = new Date();\r\n    var utc = d.getTime() + d.getTimezoneOffset() * 60000;\r\n    var nd = new Date(utc + 3600000 * offset);\r\n    return nd;\r\n  }\r\n\r\n  myNextPrayerTime(dayPrayerTime) {\r\n    if (dayPrayerTime.date != null)\r\n      if (new Date().getDate() === parseInt(dayPrayerTime.date.gregorian.day)) {\r\n        let myListOfTimes = [];\r\n        //myListOfTimes.push(dayPrayerTime.timings.Imsak);\r\n        //myListOfTimes.push(dayPrayerTime.timings.Fajr);\r\n        //myListOfTimes.push(dayPrayerTime.timings.Sunrise);\r\n        myListOfTimes.push(dayPrayerTime.timings.Dhuhr);\r\n        //myListOfTimes.push(dayPrayerTime.timings.Sunset);\r\n        myListOfTimes.push(dayPrayerTime.timings.Maghrib);\r\n\r\n        let minTime = 4000;\r\n        let currSumTime =\r\n          60 * parseInt(new Date().getHours()) +\r\n          parseInt(new Date().getMinutes());\r\n\r\n        for (let i = 0; i < myListOfTimes.length; i++) {\r\n          let sumTime =\r\n            60 * parseInt(myListOfTimes[i].split(\" \")[0].split(\":\")[0]) +\r\n            parseInt(myListOfTimes[i].split(\" \")[0].split(\":\")[1]);\r\n\r\n          if (sumTime - currSumTime < minTime && sumTime - currSumTime > 0) {\r\n            minTime = Math.abs(currSumTime - sumTime);\r\n\r\n            return sumTime;\r\n          }\r\n        }\r\n      }\r\n  }\r\n\r\n  render() {\r\n    let prayerTimeStyler = \"\";\r\n    if (this.state.MonthsPrayerTimes && this.state.nextMonthsPrayerTime) {\r\n      let myTwoMonth = this.state.MonthsPrayerTimes.concat(\r\n        this.state.nextMonthsPrayerTime\r\n      );\r\n      prayerTimeStyler = myTwoMonth.map(dayPrayerTime => {\r\n        let todayStyler = \"\";\r\n        let timeStyler = [];\r\n        timeStyler.push(\"Imsak\");\r\n        timeStyler.push(\"Fajr\");\r\n        timeStyler.push(\"Sunrise\");\r\n        timeStyler.push(\"Noon\");\r\n        timeStyler.push(\"Sunset\");\r\n        timeStyler.push(\"Maghrib\");\r\n\r\n        if (\r\n          new Date().getDate() === parseInt(dayPrayerTime.date.gregorian.day)\r\n        ) {\r\n          let myListOfTimes = [];\r\n          myListOfTimes.push(dayPrayerTime.timings.Imsak);\r\n          myListOfTimes.push(dayPrayerTime.timings.Fajr);\r\n          myListOfTimes.push(dayPrayerTime.timings.Sunrise);\r\n          myListOfTimes.push(dayPrayerTime.timings.Dhuhr);\r\n          myListOfTimes.push(dayPrayerTime.timings.Sunset);\r\n          myListOfTimes.push(dayPrayerTime.timings.Maghrib);\r\n          let minTime = 4000;\r\n          let minIndex = 0;\r\n          let currSumTime =\r\n            60 * parseInt(new Date().getHours()) +\r\n            parseInt(new Date().getMinutes());\r\n\r\n          for (let i = 0; i < myListOfTimes.length; i++) {\r\n            let sumTime =\r\n              60 * parseInt(myListOfTimes[i].split(\" \")[0].split(\":\")[0]) +\r\n              parseInt(myListOfTimes[i].split(\" \")[0].split(\":\")[1]);\r\n\r\n            if (sumTime - currSumTime < minTime && sumTime - currSumTime > 0) {\r\n              minTime = Math.abs(currSumTime - sumTime);\r\n              minIndex = i;\r\n            }\r\n          }\r\n          timeStyler[minIndex] = timeStyler[minIndex] + \" Now\";\r\n          todayStyler = \"today-date\";\r\n        }\r\n\r\n        return (\r\n          <div\r\n            key={dayPrayerTime.date.readable}\r\n            className={`ui ${todayStyler} card`}\r\n          >\r\n            <div className=\"content\">\r\n              <div className=\"header\">\r\n                {dayPrayerTime.date.gregorian.weekday.en}\r\n              </div>\r\n              <div className=\"meta\">{dayPrayerTime.date.readable}</div>\r\n              <table className=\"ui celled table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Time Of Day</th>\r\n                    <th>Prayer Time</th>\r\n                  </tr>\r\n                  <tr className={`${timeStyler[0]}`}>\r\n                    <td data-label=\"Time Of Day\">\r\n                      <strong>Imsak</strong>\r\n                    </td>\r\n                    <td data-label=\"Prayer Time\">\r\n                      {dayPrayerTime.timings.Imsak}\r\n                    </td>\r\n                  </tr>\r\n                  <tr className={`${timeStyler[1]}`}>\r\n                    <td data-label=\"Time Of Day\">\r\n                      <strong>Fajr</strong>\r\n                    </td>\r\n                    <td data-label=\"Prayer Time\">\r\n                      {dayPrayerTime.timings.Fajr}\r\n                    </td>\r\n                  </tr>\r\n                  <tr className={`${timeStyler[2]}`}>\r\n                    <td data-label=\"Time Of Day\">\r\n                      <strong>Sunrise</strong>\r\n                    </td>\r\n                    <td data-label=\"Prayer Time\">\r\n                      {dayPrayerTime.timings.Sunrise}\r\n                    </td>\r\n                  </tr>\r\n                  <tr className={`${timeStyler[3]}`}>\r\n                    <td data-label=\"Time Of Day\">\r\n                      <strong>Noon</strong>\r\n                    </td>\r\n                    <td data-label=\"Prayer Time\">\r\n                      {dayPrayerTime.timings.Dhuhr}\r\n                    </td>\r\n                  </tr>\r\n                  <tr className={`${timeStyler[4]}`}>\r\n                    <td data-label=\"Time Of Day\">\r\n                      <strong>Sunset</strong>\r\n                    </td>\r\n                    <td data-label=\"Prayer Time\">\r\n                      {dayPrayerTime.timings.Sunset}\r\n                    </td>\r\n                  </tr>\r\n                  <tr className={`${timeStyler[5]}`}>\r\n                    <td data-label=\"Time Of Day\">\r\n                      <strong>Maghrib</strong>\r\n                    </td>\r\n                    <td data-label=\"Prayer Time\">\r\n                      {dayPrayerTime.timings.Maghrib}\r\n                    </td>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n      let todaysDate = new Date().getDate();\r\n      prayerTimeStyler = prayerTimeStyler.slice(todaysDate - 1, todaysDate + 4);\r\n\r\n      prayerTimeStyler.push(\r\n        <div key=\"localTime\" className=\"ui card\">\r\n          <div className=\"content\">\r\n            <div className=\"header\">Local Time:</div>\r\n            <Clock className=\"clock\" value={this.state.date} />\r\n            <div className=\"header\">Tehran Time:</div>\r\n            <Clock className=\"clock\" value={this.state.tehranTime} />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state && this.state.MonthsPrayerTimes && (\r\n          <div className=\"ui cards\"> {prayerTimeStyler} </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrayerTime;\r\n","import React from \"react\";\r\nimport ReactWeather from \"react-open-weather\";\r\nimport \"react-open-weather/lib/css/ReactWeather.css\";\r\nclass WeatherRefresher extends React.Component {\r\n  state = {\r\n    refreshFlag: false\r\n  };\r\n  componentDidMount() {\r\n    setInterval(\r\n      () => this.setState({ refreshFlag: !this.state.refreshFlag }),\r\n      36000000\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <ReactWeather\r\n        forecast={this.props.forecast}\r\n        apikey={this.props.apikey}\r\n        type={this.props.type}\r\n        lat={this.props.lat}\r\n        lon={this.props.lon}\r\n        tick={this.state.refreshFlag}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default WeatherRefresher;\r\n","import React from \"react\";\r\n\r\nimport ReactPlayer from \"react-player\";\r\n\r\nimport CoordinateFinder from \"../HelperFunctions/CoordinateFinder\";\r\nimport PrayerTime from \"./PrayerTime\";\r\nimport WeatherRefresher from \"./WeatherRefresher\";\r\n\r\nclass Main extends React.Component {\r\n  state = {\r\n    longitude: \"\",\r\n    latitude: \"\",\r\n    date: new Date(),\r\n    playAzan: false,\r\n    playerURL:\r\n      \"https://soundcloud.com/aljaafaria-centre/beautiful-shia-azan-by-sayed\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setCoordinates();\r\n  }\r\n\r\n  setCoordinates = () => {\r\n    let myCoordinates = new CoordinateFinder();\r\n    myCoordinates.getCoordinates(coordinates => {\r\n      this.setState({\r\n        latitude: coordinates.latitude,\r\n        longitude: coordinates.longitude\r\n      });\r\n    });\r\n  };\r\n  ref = player => {\r\n    this.player = player;\r\n  };\r\n  refPlayerText = playerText => {\r\n    this.playerText = playerText;\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"overall\">\r\n        <div className=\"ui equal width center aligned padded grid\">\r\n          {this.state && this.state.longitude && this.state.latitude && (\r\n            <div className=\"row\">\r\n              <div className=\"column\">\r\n                <PrayerTime\r\n                  latitude={this.state.latitude}\r\n                  longitude={this.state.longitude}\r\n                  playAzan={shouldPlay =>\r\n                    this.setState({ playAzan: shouldPlay })\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n          {this.state && this.state.longitude && this.state.latitude && (\r\n            <div className=\"row\">\r\n              <div className=\"column\">\r\n                <WeatherRefresher\r\n                  forecast=\"5days\"\r\n                  apikey=\"c1649867e0f4434fb55224755191905\"\r\n                  type=\"geo\"\r\n                  lat={this.state.latitude.toString()}\r\n                  lon={this.state.longitude.toString()}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div className=\"row\">\r\n            <div className=\"column\">\r\n              <ReactPlayer\r\n                className=\"player\"\r\n                ref={this.ref}\r\n                controls={true}\r\n                width=\"200px\"\r\n                height=\"80px\"\r\n                url={this.state.playerURL}\r\n                playing={this.state.playAzan}\r\n                onEnded={() => {\r\n                  this.setState({ playAzan: false });\r\n                  this.player.seekTo(0);\r\n                }}\r\n              />\r\n              <div className=\"ui input\">\r\n                <input\r\n                  ref={this.refPlayerText}\r\n                  type=\"text\"\r\n                  placeholder=\"URL...\"\r\n                />\r\n              </div>\r\n              <button\r\n                className=\"ui primary button\"\r\n                onClick={() =>\r\n                  this.setState({ playerURL: this.playerText.value })\r\n                }\r\n              >\r\n                Set\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Main from \"./components/Main\"\r\n\r\nclass App extends React.Component {\r\n\r\n    renderContent() {\r\n        return <Main />\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return <div>{this.renderContent()}</div>;\r\n      }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}